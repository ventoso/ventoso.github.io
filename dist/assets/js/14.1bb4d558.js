(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{470:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"python的两种编程方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python的两种编程方式"}},[s._v("#")]),s._v(" python的两种编程方式")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("交互式：对每个输入语句即时运行结果，适合语法练习")])]),s._v(" "),a("li",[a("p",[s._v("文件式：批量执行一组语句并运行结果，是编程的主要方式")])])]),s._v(" "),a("h2",{attrs:{id:"实例1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例1"}},[s._v("#")]),s._v(" 实例1")]),s._v(" "),a("p",[s._v("温度转换")]),s._v(" "),a("p",[s._v("温度刻画的两种不同体系")]),s._v(" "),a("p",[s._v("摄氏度/华氏度")]),s._v(" "),a("p",[s._v("将两个温度值相互转换")]),s._v(" "),a("h4",{attrs:{id:"问题分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题分析"}},[s._v("#")]),s._v(" 问题分析")]),s._v(" "),a("p",[s._v("该问题计算部分的理解与确定")]),s._v(" "),a("p",[s._v("-理解1 ：直接将温度值进行转换")]),s._v(" "),a("p",[s._v("-理解2 ： 将温度信息发布的声音或图像形式进行理解和转换")]),s._v(" "),a("p",[s._v("-理解3 ： 监控温度信息发布渠道，实时获取并转换温度值")]),s._v(" "),a("p",[s._v("分析问题：采用理解1")]),s._v(" "),a("p",[s._v("直接将温度值进行转换，转换前后明确温度值的标志")]),s._v(" "),a("p",[s._v("划分边界")]),s._v(" "),a("p",[s._v("输入：带华氏或摄氏标志的温度值")]),s._v(" "),a("p",[s._v("处理：根据温度标志选择适当的温度转换算法")]),s._v(" "),a("p",[s._v("输出： 带摄氏或华氏的温度值")]),s._v(" "),a("p",[s._v("输入输出格式设计")]),s._v(" "),a("p",[s._v("标识放在温度后，F标识华氏度，C表示摄氏度")]),s._v(" "),a("p",[s._v("即，23F标识摄氏23度，47C表示摄氏47度")]),s._v(" "),a("p",[s._v("以上为输入输出的描述与定义")]),s._v(" "),a("p",[s._v("设计算法")]),s._v(" "),a("p",[s._v("根据两者温度定义，利用转换公式")]),s._v(" "),a("p",[s._v("C = (F-32)/1.8")]),s._v(" "),a("p",[s._v("F = C * 1.8 +32")]),s._v(" "),a("p",[s._v("其中，F标识华氏度，C表示摄氏度")]),s._v(" "),a("h4",{attrs:{id:"程序编写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序编写"}},[s._v("#")]),s._v(" 程序编写")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#TempConcert.py")]),s._v("\nTempStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入带有符号的温度值："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'F'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    C "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.8")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"转换后的温度是{:.2f}C"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    F "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"转换后的温度是{:.2f}F"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"输入格式错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"python程序语法元素分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python程序语法元素分析"}},[s._v("#")]),s._v(" python程序语法元素分析")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("程序的格式框架")])]),s._v(" "),a("li",[a("p",[s._v("命名与保留字")])]),s._v(" "),a("li",[a("p",[s._v("数据类型")])]),s._v(" "),a("li",[a("p",[s._v("语句与函数")])]),s._v(" "),a("li",[a("p",[s._v("python程序的输入与输出")])]),s._v(" "),a("li",[a("p",[s._v('"温度转换代码"逐行分析')])])]),s._v(" "),a("h4",{attrs:{id:"程序格式框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序格式框架"}},[s._v("#")]),s._v(" 程序格式框架")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("代码高亮（编成的色彩辅助体系，不是语法要求）")])]),s._v(" "),a("li",[a("p",[s._v("缩进 （一行代码开始前的空白区域，"),a("code",[s._v("表达程序的格式框架")]),s._v("）")])])]),s._v(" "),a("p",[s._v("在python中，缩进表达程序的格式框架")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("- 严格明确 缩进是语法的一部分，缩进不正确程序运行错误\n- 所属关系 表达代码间包含和层次关系的唯一手段\n")])])]),a("ul",[a("li",[s._v("长度一致 程序内一致即可，一般用4个空格或一个TAB")])]),s._v(" "),a("ul",[a("li",[s._v("注释 ：不被程序执行的辅助性说明信息，可提高代码可读性")]),s._v(" "),a("li",[s._v("单行注释 以"),a("code",[s._v("#")]),s._v("开头，其后内容为注释")]),s._v(" "),a("li",[s._v("多行注释 以 ``` 开头和结尾")])]),s._v(" "),a("h4",{attrs:{id:"命名与保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名与保留字"}},[s._v("#")]),s._v(" 命名与保留字")]),s._v(" "),a("p",[s._v("命名：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("变量 ：是用来保存和表示数据的占位符号")]),s._v(" "),a("p",[s._v("变量采用标识符（名字）来表示，关联标识符的过程叫作命名（给变量 命名）")])])]),s._v(" "),a("p",[s._v("例如，温度转换实例中 "),a("code",[s._v("TempStr")]),s._v("是变量名字")]),s._v(" "),a("ul",[a("li",[s._v("可以使用符号等号"),a("code",[s._v("=")]),s._v("向变量赋值或修改值， "),a("code",[s._v("=")]),s._v('被称为赋值符号 例如:TempStr = "82F"  #向变量TempStr赋值"82F"')])]),s._v(" "),a("p",[a("code",[s._v("=")]),s._v("为赋值符号")]),s._v(" "),a("h5",{attrs:{id:"关联标识符的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联标识符的过程"}},[s._v("#")]),s._v(" 关联标识符的过程")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("命名规则 ：大小写字母，数字，下划线，汉字等字符及组合")])]),s._v(" "),a("li",[a("p",[s._v("注意事项：大小写敏感，首字符不能是数字，且不与保留字相同")])])]),s._v(" "),a("h5",{attrs:{id:"保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保留字"}},[s._v("#")]),s._v(" 保留字")]),s._v(" "),a("p",[s._v("是被编程语言内部定义并保留使用的标识符")]),s._v(" "),a("p",[s._v("Python语言中一共有33个保留字（关键字）")]),s._v(" "),a("ul",[a("li",[s._v("保留字是编程语言的基本单词，大小写敏感")])]),s._v(" "),a("p",[s._v("['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'exc\nept', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return',\n'try', 'while', 'with', 'yield']")]),s._v(" "),a("p",[s._v("在python命令行中，可通过")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" keyword\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kerword.kwlist\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'False'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'None'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'True'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'and'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'as'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'assert'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'async'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'await'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'break'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'class'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'continue'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'def'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'del'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'elif'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'else'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'except'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'finally'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'for'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'from'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'global'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'if'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'import'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'in'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'is'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lambda'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nonlocal'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'not'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'or'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pass'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'raise'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'return'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'try'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'while'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'with'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yield'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("blockquote",[a("p",[s._v("整数")])]),s._v(" "),a("blockquote",[a("p",[s._v("浮点数")])]),s._v(" "),a("blockquote",[a("p",[s._v("列表")])]),s._v(" "),a("blockquote",[a("p",[s._v("字符串")])]),s._v(" "),a("p",[s._v("数据表达方式不同，为了使编程语言准确且无歧义，所以给计算机程序赋予数据的时候，需要告诉计算机程序如何去解释或表达该数据")]),s._v(" "),a("p",[s._v("概念：我们在将一段信息输入给计算机程序的时候，需要关联一种与这段信息相适应的一个形式定义。程序设计语言通过一定方式向计算机表达数据形式的这样的方式就叫数据类型")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("整数")]),s._v("类型 ："),a("code",[s._v("123")]),s._v(" 表示整数123")]),s._v(" "),a("li",[a("code",[s._v("字符串")]),s._v("类型："),a("code",[s._v('"123"')]),s._v("/"),a("code",[s._v("'123'")]),s._v("表示字符串123")]),s._v(" "),a("li",[a("code",[s._v("列表")]),s._v("类型： "),a("code",[s._v("[1,2,3]")]),s._v("表示1,2,3三个数字")])]),s._v(" "),a("h5",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[s._v("#")]),s._v(" 字符串")]),s._v(" "),a("p",[s._v("由0个或多个字符组成的有序字符序列，字符串就是由一对单引号或双引号表示的有序字符序列")]),s._v(" "),a("p",[s._v("且，字符串是字符的有序数列可以对其中的字符进行索引")]),s._v(" "),a("blockquote",[a("p",[s._v("字符串中的编号是从0开始的")])]),s._v(" "),a("p",[s._v("python提供了两种索引形式：正向递增序号和反向递减序号")]),s._v(" "),a("p",[s._v("正向递增序号从左至右，由0开始依次增加")]),s._v(" "),a("p",[s._v("反向递减 序号从右往左，由-1开始依次递减")]),s._v(" "),a("p",[s._v("可以使用一个"),a("code",[s._v("[]")]),s._v("来获取字符串中的一个或者多个字符，这表现为字符串的索引和切片操作")]),s._v(" "),a("h6",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),a("p",[s._v("返回字符串中单个字符 "),a("code",[s._v("<字符串> [M]")])]),s._v(" "),a("p",[s._v("例:")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入带有符号的温度值: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#获取字符串"请输入带有符号的温度值: "的第0个字符')]),s._v("\nTempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#表示获取TempStr该变量字符串的第-1（倒数第一个）个字符")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h6",{attrs:{id:"切片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切片"}},[s._v("#")]),s._v(" 切片")]),s._v(" "),a("p",[s._v("只返回字符串中的一串字符，或一个字符的子串 <字符串>[M:N]")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入带有符号的温度值："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指的是取出其中的第一个字符，第二个字符，但不到第三个字符，因此表达的是字符出的输入")]),s._v("\nTempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#表示从0开始，不到-1的一串字符字串，相当于把最后一个字符去掉")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h5",{attrs:{id:"数字类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字类型"}},[s._v("#")]),s._v(" 数字类型")]),s._v(" "),a("p",[s._v("整数 ：数学中的整数 如 32或-89 （包括正数负数）")]),s._v(" "),a("p",[s._v("浮点数 ：表示数学中的实数，且带有小数部分 如1.8 或者-1,8 或者 -1.0 （同样包含正负数）")]),s._v(" "),a("h5",{attrs:{id:"列表类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表类型"}},[s._v("#")]),s._v(" 列表类型")]),s._v(" "),a("p",[s._v("由 0个或多个数据组成的有序数列")]),s._v(" "),a("p",[s._v("列表使用"),a("code",[s._v("[]")]),s._v("表示，采用"),a("code",[s._v(",")]),s._v("逗号分隔各个元素")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'F'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列表元素，表示两个元素'")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("F' 和'")])]),s._v("f'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以使用保留字"),a("code",[s._v("in")]),s._v("判断一个元素是否在列表中")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#判断前者是否与列表中的某一个元素相同")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"语句与函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句与函数"}},[s._v("#")]),s._v(" 语句与函数")]),s._v(" "),a("h5",{attrs:{id:"赋值语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值语句"}},[s._v("#")]),s._v(" 赋值语句")]),s._v(" "),a("p",[s._v("由赋值符号构成的一行代码")]),s._v(" "),a("p",[s._v("-赋值语句用来给变量赋予新的数据值")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("C"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.8")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 右侧运算结果赋值给变量C")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("-赋值语句右侧的数据类型同时作用于变量\n")])])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# input()将返回一个字符串，TempStr也是字符串")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h5",{attrs:{id:"分支语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支语句"}},[s._v("#")]),s._v(" 分支语句")]),s._v(" "),a("p",[s._v("由判断条件决定程序运行方向的语句")]),s._v(" "),a("p",[s._v("-使用保留字 "),a("code",[s._v("if elif else")]),s._v("构成条件判断的分支程序")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'F'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果条件为True则执行冒号后语句")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("冒号的含义：如果条件成立，则执行冒后后带有缩进的语句，如果条件不成立，冒号以及冒号后面的缩进语句将会被跳过")]),s._v(" "),a("ul",[a("li",[s._v("分支语句每个保留字所在行的最后面存在一个冒号"),a("code",[s._v(":")]),s._v(".其是语法的一部分，"),a("code",[s._v("冒号及后续缩进用来表示后续语句与条件的所属关系")]),s._v("  一定不能将其省略！")])]),s._v(" "),a("h5",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),a("p",[s._v("根据输入参数产生不同输出的功能过程")]),s._v(" "),a("p",[s._v("类似数学中的函数，y=f(x)")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"文本"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 打印输出"文本"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("-函数采用 <函数名>(<参数>)方式使用")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TempStr[0:-1]是参数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"python程序的输入与输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python程序的输入与输出"}},[s._v("#")]),s._v(" python程序的输入与输出")]),s._v(" "),a("h5",{attrs:{id:"输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入"}},[s._v("#")]),s._v(" 输入")]),s._v(" "),a("p",[s._v("输入是程序获得外部信息的一个过程")]),s._v(" "),a("p",[s._v("大多数程序中都使用input函数从控制台获得用户输入的函数")]),s._v(" "),a("p",[s._v("输入函数 "),a("code",[s._v("input()")])]),s._v(" "),a("p",[s._v("格式：<变量> = input(<提示信息字符串>)")]),s._v(" "),a("p",[s._v("-用户输入的信息以字符串类型表示在<变量>中")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("TempStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TempStr保存用户输入的信息")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("input函数返回的信息，会以字符串的类型保存在变量TempStr中")]),s._v(" "),a("h5",{attrs:{id:"输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[s._v("#")]),s._v(" 输出")]),s._v(" "),a("p",[s._v("输出函数 print ()")]),s._v(" "),a("p",[s._v("以字符形式向控制台输出结果的函数")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("拟输出字符串或字符串变量"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("字符串类型的一对引号只在程序内部使用，输出无引号")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"输出格式错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 向控制台输出 输出格式错误")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("print()格式化")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"转换后的温度是{:.2f}C"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {}表示槽，后续变量填充到槽中 ，{:.2f}表示将变量C填充到这个位置时取小数点后两位")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("评估函数 eval()")]),s._v(" "),a("p",[s._v("去掉参数最外侧引号并执行余下语句")]),s._v(" "),a("ul",[a("li",[s._v("eval()函数的基本使用格式")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("字符串或字符串变量"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("能将任何形式的字符串信息转换成 python语句")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果TempStr[0:-1]的值是一个字符串"12.3",那么它外侧的引号会被去掉而称为数字类型12.3')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"温度转换代码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#温度转换代码分析"}},[s._v("#")]),s._v(" 温度转换代码分析")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TempConcert.py  (注释)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入，input函数，用户输入的值将会保存在变量TempStr中")]),s._v("\nTempStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入带有符号的温度值："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保留字if表达的是一个分支语句，它会判断后面的条件是否成立")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if后方判断TempStr的第-1个值是否在列表类型当中，如果在，就是说用户输入了一个华氏温度值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 反之则表示用户输入了一个非华氏度温度值，跳过下列两行代码（不包括注释）直接进行下第三行代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'F'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  对输入的华氏温度值根据转换公式进行转换，")]),s._v("\n    C "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出，且此处为print()函数的格式化")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"转换后的温度是{:.2f}C"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保留字elif表达的也是一个分支语句，如果用户输入的值满足后方条件，则执行下列所属缩进的代码，反之则跳过并执行下一个分支语句    ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    F "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"转换后的温度是{:.2f}F"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保留字else同样是一个分支语句，表示非")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"输入格式错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"小节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小节"}},[s._v("#")]),s._v(" 小节")]),s._v(" "),a("p",[s._v("小白在此")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("缩进")]),s._v(" "),a("p",[s._v("用来表达语句间的层次关系以及包含关系")])]),s._v(" "),a("li",[a("p",[s._v("注释")])])]),s._v(" "),a("p",[s._v("编写者为了提高代码可读性，写的辅助信息，不被计算机执行")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("命名")]),s._v(" "),a("p",[s._v("是给变量关联标识符或赋值的过程")])]),s._v(" "),a("li",[a("p",[s._v("变量")]),s._v(" "),a("p",[s._v("是用来标识数据值的占位符")])]),s._v(" "),a("li",[a("p",[s._v("保留字")]),s._v(" "),a("p",[s._v("是计算机的程序语言中默认保留下来为程序语言所使用的")])])]),s._v(" "),a("p",[s._v("数据类型")]),s._v(" "),a("p",[s._v("字符串，数字类型，列表类型")]),s._v(" "),a("p",[s._v("赋值语句，分支语句，函数")]),s._v(" "),a("p",[s._v("赋值语句：由赋值符号构成的")]),s._v(" "),a("p",[s._v("分支语句，由if elif else 构成云云")]),s._v(" "),a("p",[s._v("三个具体的函数")]),s._v(" "),a("p",[s._v("input()")]),s._v(" "),a("p",[s._v("print()")]),s._v(" "),a("p",[s._v("eval()")]),s._v(" "),a("p",[s._v("print()格式化")])])}),[],!1,null,null,null);t.default=r.exports}}]);